[{"C:\\Users\\User\\Downloads\\ASSIGNMENTS-PROJECTS\\REACT-MOVIE\\src\\index.js":"1","C:\\Users\\User\\Downloads\\ASSIGNMENTS-PROJECTS\\REACT-MOVIE\\src\\App.js":"2","C:\\Users\\User\\Downloads\\ASSIGNMENTS-PROJECTS\\REACT-MOVIE\\src\\components\\Search.js":"3","C:\\Users\\User\\Downloads\\ASSIGNMENTS-PROJECTS\\REACT-MOVIE\\src\\components\\MovieList.js":"4","C:\\Users\\User\\Downloads\\ASSIGNMENTS-PROJECTS\\REACT-MOVIE\\src\\components\\Movie.js":"5","C:\\Users\\User\\Downloads\\ASSIGNMENTS-PROJECTS\\REACT-MOVIE\\src\\components\\Spinner.js":"6","C:\\Users\\User\\Downloads\\Videos\\MERN-REALTIME-COLLABORATION\\src\\index.js":"7","C:\\Users\\User\\Downloads\\Videos\\MERN-REALTIME-COLLABORATION\\src\\App.js":"8","C:\\Users\\User\\Downloads\\Videos\\MERN-REALTIME-COLLABORATION\\src\\pages\\Home.jsx":"9","C:\\Users\\User\\Downloads\\Videos\\MERN-REALTIME-COLLABORATION\\src\\pages\\EditorPage.jsx":"10","C:\\Users\\User\\Downloads\\Videos\\MERN-REALTIME-COLLABORATION\\src\\components\\Client.jsx":"11","C:\\Users\\User\\Downloads\\Videos\\MERN-REALTIME-COLLABORATION\\src\\components\\Editor.jsx":"12","C:\\Users\\User\\Downloads\\Videos\\MERN-REALTIME-COLLABORATION\\src\\socket.js":"13"},{"size":177,"mtime":1646826999531,"results":"14","hashOfConfig":"15"},{"size":1327,"mtime":1646891504414,"results":"16","hashOfConfig":"15"},{"size":1124,"mtime":1646889506227,"results":"17","hashOfConfig":"15"},{"size":483,"mtime":1646884488520,"results":"18","hashOfConfig":"15"},{"size":725,"mtime":1646889116797,"results":"19","hashOfConfig":"15"},{"size":197,"mtime":1646887722468,"results":"20","hashOfConfig":"15"},{"size":177,"mtime":1646826999531,"results":"21","hashOfConfig":"22"},{"size":985,"mtime":1648705383690,"results":"23","hashOfConfig":"22"},{"size":2669,"mtime":1648883087747,"results":"24","hashOfConfig":"22"},{"size":3787,"mtime":1648881017674,"results":"25","hashOfConfig":"22"},{"size":306,"mtime":1648710172590,"results":"26","hashOfConfig":"22"},{"size":1601,"mtime":1648882047574,"results":"27","hashOfConfig":"22"},{"size":340,"mtime":1649137370379,"results":"28","hashOfConfig":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2xzvzz",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"u7ghgx",{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"43"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"43"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\User\\Downloads\\ASSIGNMENTS-PROJECTS\\REACT-MOVIE\\src\\index.js",[],"C:\\Users\\User\\Downloads\\ASSIGNMENTS-PROJECTS\\REACT-MOVIE\\src\\App.js",[],"C:\\Users\\User\\Downloads\\ASSIGNMENTS-PROJECTS\\REACT-MOVIE\\src\\components\\Search.js",[],"C:\\Users\\User\\Downloads\\ASSIGNMENTS-PROJECTS\\REACT-MOVIE\\src\\components\\MovieList.js",[],"C:\\Users\\User\\Downloads\\ASSIGNMENTS-PROJECTS\\REACT-MOVIE\\src\\components\\Movie.js",[],"C:\\Users\\User\\Downloads\\ASSIGNMENTS-PROJECTS\\REACT-MOVIE\\src\\components\\Spinner.js",[],"C:\\Users\\User\\Downloads\\Videos\\MERN-REALTIME-COLLABORATION\\src\\index.js",[],["60","61"],"C:\\Users\\User\\Downloads\\Videos\\MERN-REALTIME-COLLABORATION\\src\\App.js",["62","63"],"import React, {useState} from 'react'\r\nimport './App.css';\r\n\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport {BrowserRouter, Routes,Route} from 'react-router-dom'\r\nimport Home from './pages/Home';\r\nimport EditorPage from './pages/EditorPage';\r\n\r\nfunction App() {\r\n\r\n\r\n  return (\r\n    \r\n        <> \r\n            <div>\r\n              <Toaster\r\n                position=\"top-right\"\r\n                reverseOrder={false}\r\n                toastOptions={{\r\n                  success : {\r\n                    theme: {\r\n                      primary : '#4aee88',\r\n                    },\r\n                  },\r\n                }}\r\n                />\r\n            </div>\r\n             <BrowserRouter>\r\n                <Routes>\r\n                    <Route path='/' element={<Home/>}/>\r\n                    <Route path='/editor/:roomId' element={<EditorPage/>}/>\r\n                </Routes>\r\n              \r\n              </BrowserRouter>\r\n\r\n        </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\User\\Downloads\\Videos\\MERN-REALTIME-COLLABORATION\\src\\pages\\Home.jsx",["64"],"import React,{useState} from 'react'\r\n\r\nimport {v4 as uuidV4} from 'uuid'\r\nimport toast from 'react-hot-toast';\r\nimport {useNavigate} from 'react-router-dom'\r\n\r\n\r\n\r\nconst Home = () => {\r\n    const navigate = useNavigate();\r\n    const [roomid, setRoomId] =  useState('')\r\n    const [username, setUserName] =  useState('')\r\n\r\n\r\n    const createNewRoom = (e) =>{\r\n        e.preventDefault()\r\n        const id = uuidV4()\r\n        setRoomId(id)\r\n        toast.success('Created a new room!')\r\n       \r\n    };\r\n\r\n    const joinRoom = () =>{\r\n     if(!roomid || !username){\r\n         toast.error('Room Id & username is require!')\r\n         return;\r\n     }\r\n\r\n     navigate(`/editor/${roomid}`, {\r\n         state : { username }\r\n     });\r\n\r\n    };\r\n   \r\n    const handleEnter = (e) =>{\r\n        if(e.code === 'Enter'){\r\n            joinRoom()\r\n        }\r\n    };\r\n    \r\n  return (\r\n    <div className='homeWrapper'>  \r\n\r\n            <div className=\"formWrapper\">\r\n                  <img src=\"/collaboration.png\" alt=\"collaboration\" /> \r\n\r\n                   <h4 className='mainLabel'>Paste invitation ROOM ID</h4>\r\n\r\n                  <div className=\"inputGroups\">\r\n\r\n                      <input \r\n                         type=\"text\" \r\n                         className=\"inputBox\"\r\n                         value={roomid}\r\n                         onChange={(e)=>setRoomId(e.target.value)}  \r\n                         onKeyUp={handleEnter}\r\n                         placeholder=\"ROOM ID\"/>\r\n                      <input \r\n                         type=\"text\" \r\n                         className=\"inputBox\"\r\n                         value={username}\r\n                         onChange={(e)=>setUserName(e.target.value)} \r\n                         onKeyUp={handleEnter}\r\n                         placeholder=\"USERNAME\"/>\r\n\r\n                      <button \r\n                         className='btn joinBtn'\r\n                         onClick={joinRoom}\r\n                         >\r\n                        JOIN</button>\r\n\r\n                      <span className='createInfo'>\r\n                        If you aren't join please join &nbsp;\r\n\r\n                        <a onClick={createNewRoom} href=\"#\" className=\"createnewBtn\">new one</a>\r\n\r\n                     </span>\r\n                  </div>\r\n\r\n                 \r\n\r\n            </div>\r\n\r\n\r\n            <footer>\r\n                <h4>Built with lots of love &copy; 2022 &nbsp;\r\n                    <a href=\"https://www.youtube.com/channel/UCa43_dm1_WetX7nGq11KMSw\" \r\n                        target=\"_blank\" rel=\"noreferrer\">Deepak TV</a>\r\n                </h4>\r\n            </footer>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home","C:\\Users\\User\\Downloads\\Videos\\MERN-REALTIME-COLLABORATION\\src\\pages\\EditorPage.jsx",["65"],"import React,{useState,useEffect,useRef} from 'react'\r\nimport Client from '../components/Client'\r\nimport Editor from '../components/Editor'\r\nimport {Navigate, useLocation,useNavigate,useParams} from 'react-router-dom'\r\nimport {initSocket} from '../socket'\r\nimport toast from 'react-hot-toast'\r\n\r\n\r\nconst EditorPage = () => {\r\n  const socketRef = useRef(null) \r\n  const codeRef = useRef(null) \r\n  const location = useLocation()\r\n  const {roomId} = useParams()\r\n  const reactNavigate = useNavigate()\r\n\r\n  console.log(location) \r\n  \r\n  const [clients,setClients] = useState([]);\r\n\r\n  useEffect(() => {\r\n\r\n    const init = async () =>{\r\n         socketRef.current  = await initSocket()\r\n         socketRef.current.on('connect_error', (err)=> handleError(err))\r\n         socketRef.current.on('connect_failed', (err)=> handleError(err))\r\n         \r\n         function handleError(e){\r\n           console.log('Socket error', e)\r\n           toast.error('Socket connection failed pls try again')\r\n           reactNavigate('/')\r\n         }\r\n\r\n         socketRef.current.emit('join', {\r\n           roomId,\r\n           username : location.state?.username\r\n         });\r\n        \r\n\r\n         // Listening to joined users events\r\n         socketRef.current.on('joined',({clients,username,socketId})=>{\r\n\r\n                if(username !== location.state?.username){\r\n                  toast.success(`${username} joined the room`)\r\n                }\r\n\r\n                setClients(clients)\r\n\r\n                socketRef.current.emit('sync-code', {\r\n                  code : codeRef.current,\r\n                  socketId\r\n                });\r\n          });\r\n\r\n\r\n         // Listening disconnected users\r\n         socketRef.current.on('disconnected', ({socketId, username}) =>{\r\n                 toast.success(`${username} left the room`)\r\n\r\n                 setClients((prev) => {\r\n                   return prev.filter((client) => client.socketId !== socketId)\r\n                 });\r\n         })\r\n    }\r\n\r\n    init()\r\n\r\n    return () => {\r\n      // socketRef.current.disconnect()\r\n      socketRef.current.off('joined')\r\n      socketRef.current.off('disconnected')\r\n      socketRef.current.disconnect()\r\n\r\n    }\r\n   \r\n  }, [])\r\n  \r\n  const copyRoomID =  async ()=>{\r\n    try {\r\n      await navigator.clipboard.writeText(roomId)\r\n      toast.success('RoomId has been copied to your clipboard')\r\n      \r\n    } catch (error) {\r\n          \r\n      toast.error(\"couldn't copy roomId\")\r\n\r\n    }\r\n  }\r\n\r\n  const leaveRoom = () =>{\r\n        reactNavigate('/')\r\n        toast.success('Leaved room')\r\n  };\r\n\r\n  if(!location.state){\r\n   return  <Navigate to=\"/\"/>\r\n  }\r\n    \r\n  return (\r\n    <div className='mainWrap'>\r\n   \r\n        <div className=\"aside\">\r\n\r\n          <div className=\"asideInner\">\r\n\r\n            <div className=\"logo\">\r\n            <img className='editorlogo' src=\"/collaboration.png\" alt=\"collab\" />\r\n              <div className=\"logoInner\">\r\n\r\n                 <p className='l'>d-Sync</p>\r\n                 <span>REAL TIME COLLABORATION</span>\r\n              </div>\r\n              \r\n            </div>\r\n            \r\n            <h3 className='connText'>Connected Users:</h3>\r\n\r\n            <div className=\"clientslist\">\r\n                   {clients.map((c)=> (\r\n                     <Client key={c.socketId} username={c.username}/>\r\n                   ))}\r\n            </div>\r\n          </div>\r\n\r\n          <button className='btn copyBtn' onClick={copyRoomID}>Copy Room ID</button>\r\n          <button className='btn leaveBtn' onClick={leaveRoom}>Leave</button>\r\n        </div>\r\n\r\n\r\n         <div className=\"editorWrap\">\r\n             <Editor roomId={roomId} socketRef={socketRef} onCodeChange={(code)=>{codeRef.current = code} } />\r\n         </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditorPage","C:\\Users\\User\\Downloads\\Videos\\MERN-REALTIME-COLLABORATION\\src\\components\\Client.jsx",[],"C:\\Users\\User\\Downloads\\Videos\\MERN-REALTIME-COLLABORATION\\src\\components\\Editor.jsx",["66","67","68"],"import React,{useEffect,useRef} from 'react'\r\n\r\nimport Codemirror from 'codemirror'\r\nimport 'codemirror/lib/codemirror.css'\r\nimport 'codemirror/theme/dracula.css'\r\nimport 'codemirror/mode/javascript/javascript'\r\nimport 'codemirror/addon/edit/closetag'\r\nimport 'codemirror/addon/edit/closebrackets'\r\n\r\nconst Editor = ({roomId, socketRef, onCodeChange}) => {\r\n  \r\n    const editorRef  = useRef()\r\n\r\n  useEffect(() => {\r\n      \r\n     async function init(){\r\n        editorRef.current = Codemirror.fromTextArea(document.getElementById('realtimeText'), {\r\n          mode : {name : 'javascript', json:  true},\r\n          theme:  'dracula',\r\n          autoCloseTags: true,\r\n          autoCloseBrackets: true,\r\n          lineNumbers : true\r\n        });\r\n\r\n        editorRef.current.on('change', (instance, changes) => {\r\n          const {origin} = changes\r\n          const code = instance.getValue()\r\n          onCodeChange(code)\r\n          if(origin !== 'setValue'){\r\n            socketRef.current.emit('code-change',{\r\n              roomId,\r\n              code\r\n            })\r\n          }\r\n          \r\n        });\r\n \r\n     }\r\n        \r\n        \r\n    \r\n     init()\r\n      \r\n  }, []);\r\n  \r\n  useEffect(() => {\r\n\r\n    if(socketRef.current){\r\n\r\n      socketRef.current.on('code-change', ({code})=>{\r\n        if(code !== null){\r\n          editorRef.current.setValue(code)\r\n        }\r\n      })\r\n    }\r\n    \r\n    return () =>{\r\n      socketRef.current.off('code-change')\r\n    }\r\n  \r\n    \r\n  }, [socketRef.current])\r\n  \r\n\r\n\r\n  return (\r\n    <textarea  id=\"realtimeText\"></textarea>\r\n  )\r\n}\r\n\r\nexport default Editor","C:\\Users\\User\\Downloads\\Videos\\MERN-REALTIME-COLLABORATION\\src\\socket.js",["69"],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":1,"column":16,"nodeType":"76","messageId":"77","endLine":1,"endColumn":24},{"ruleId":"74","severity":1,"message":"78","line":4,"column":8,"nodeType":"76","messageId":"77","endLine":4,"endColumn":13},{"ruleId":"79","severity":1,"message":"80","line":75,"column":25,"nodeType":"81","endLine":75,"endColumn":86},{"ruleId":"82","severity":1,"message":"83","line":75,"column":6,"nodeType":"84","endLine":75,"endColumn":8,"suggestions":"85"},{"ruleId":"82","severity":1,"message":"86","line":44,"column":6,"nodeType":"84","endLine":44,"endColumn":8,"suggestions":"87"},{"ruleId":"82","severity":1,"message":"88","line":58,"column":17,"nodeType":"76","endLine":58,"endColumn":24},{"ruleId":"82","severity":1,"message":"89","line":62,"column":6,"nodeType":"84","endLine":62,"endColumn":25,"suggestions":"90"},{"ruleId":"74","severity":1,"message":"91","line":3,"column":7,"nodeType":"76","messageId":"77","endLine":3,"endColumn":10},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'toast' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'location.state?.username', 'reactNavigate', and 'roomId'. Either include them or remove the dependency array.","ArrayExpression",["94"],"React Hook useEffect has missing dependencies: 'onCodeChange', 'roomId', and 'socketRef'. Either include them or remove the dependency array. If 'onCodeChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["95"],"The ref value 'socketRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'socketRef.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook useEffect has a missing dependency: 'socketRef'. Either include it or remove the dependency array. Mutable values like 'socketRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["96"],"'URL' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},"Update the dependencies array to be: [location.state?.username, reactNavigate, roomId]",{"range":"103","text":"104"},"Update the dependencies array to be: [onCodeChange, roomId, socketRef]",{"range":"105","text":"106"},"Update the dependencies array to be: [socketRef]",{"range":"107","text":"108"},[2201,2203],"[location.state?.username, reactNavigate, roomId]",[1173,1175],"[onCodeChange, roomId, socketRef]",[1482,1501],"[socketRef]"]